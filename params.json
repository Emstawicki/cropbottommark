{
  "name": "Cropbottommark",
  "tagline": "Cut bottom for all images",
  "body": "# cropbottommark\r\nA simple class whereby you can cut bottom part of all images in directory. Example of use is in `index.php` file working at `imagestocrop` folder.\r\nTo reset cropped images list, just remove content of `croped.txt` file. You can also add here file exceptions with delimiter `;`\r\n\r\n### Example 1 \r\nLoads files from a directory with subfolders\r\n```php\r\n<?php\r\nrequire_once 'cropbottommark.php';\r\n$class = new cropbottommark();\r\n\r\n$dir = '/pathToOurImages';\r\n$class->scanDir($dir);\r\n\r\nvar_dump($class->dumpFiles());\r\n```\r\n### Example 2\r\nCrop one file\r\n```php\r\n<?php\r\nrequire_once 'cropbottommark.php';\r\n$class = new cropbottommark();\r\n\r\n$file = '/pathToOurImages/example.jpg';\r\n\r\nif (!$class->fileWasCroped($file)):\r\n$class->cropFile($file);\r\nendif;\r\n```\r\n### Example 3\r\nCrop all files in directory\r\n```php\r\n<?php\r\nrequire_once 'cropbottommark.php';\r\n$class = new cropbottommark();\r\n\r\n$dir = '/pathToOurImages';\r\n$files = $class->scanDir($dir);\r\n\r\necho 'Images to crop: '.$class->countFiles();\r\n\r\nforeach ($files as $file):\r\n\tif (! $class->fileWasCroped($file)) :\r\n    \t$class->cropFile($file);\r\n        echo 'File '.$file.' cropped success.';\r\n    else:\r\n    \techo 'File '.$file.' was cropped earlier';\r\n    endif;\r\nendforeach;\r\n\r\n```\r\n#### Pseudo-benchmark\r\nClass was tested over 50.000 files (8.3 GiB) with avarage speed 21 files per second. The limitation is the maximum script execution time . Do not worry, even if you get an error 504 can restart the script , which skips previously cropped pictures .\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}